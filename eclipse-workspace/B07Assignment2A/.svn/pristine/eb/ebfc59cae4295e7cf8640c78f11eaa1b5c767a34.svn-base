// **********************************************************
// Assignment2:
// Student1: Abhinav Chaudhary
// UTORID username: chaud349
// UT Student #: 1002707733
// Author: Abhinav Chaudhary
//
// Student2: Alexandru Andros
// UTORID username: androsal
// UT Student #: 1004354263
// Author: Alexandru Andros
//
// Student3: Balaji Babu
// UTORID username: babubala
// UT Student #:1003354871
// Author: Balaji Babu
//
// Student4: Zhi Zhong Huang
// UTORID username: huang472
// UT Student #:1002671094
// Author: Zhi Zhong Huang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************
package dirCommands;

import input.Output;
import input.Location;

import java.util.ArrayList;
import java.util.Arrays;
import driver.JShell;
import fileSystemObjects.*;

public class Grep extends Commands<String> {
    private String[] dirArray;
    private String search;
    private boolean subdir;
    private Directory root;


    public Grep(String[] dir, boolean issubdir, Location loc) {
        this.dirArray = Arrays.copyOfRange(dir, 1, dir.length);
        this.search = dir[0];
        this.subdir = issubdir;
        this.root = loc.getRoot();
    }

    public String execute() {
        String output = null;
        FSElement file;
        ArrayList<FSElement> recfiles;
        for (String fileName : dirArray) {
            file = Traverse.accessFS(fileName, root);
            if (file != null) {
                if (output == null) {
                    output = "";
                }
                if (file instanceof File) {
                    output += getContent((File) file);
                }
                else if (subdir) {
                    recfiles = Traverse.getAllDirs((Directory) file);
                    for (FSElement temp: recfiles) {
                      if (temp instanceof File) {
                        output += getContent((File)temp);
                      }
                    }
                }
                output += "\n";
            }
        }
        if (output != null) {
        output = output.substring(0, output.length() - 2);
        }
        else {
          Output.NoFilesFound();
        }
        return output;
    }

    private String getContent(File file) {
        String output = "";
        String[] content;
        output += Pwd.returnPathFromRoot(file) + ": \n";
        content = ((File) file).getContent().split("\\r?\\n");
        for (String line : content) {
            if (line.contains(this.search)) {
                output += line + "\n";
            }
        }
        return output;
    }
}
