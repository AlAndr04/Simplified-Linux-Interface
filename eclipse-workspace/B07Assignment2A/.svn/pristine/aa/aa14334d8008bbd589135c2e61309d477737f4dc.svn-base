package dirCommands;

import input.Output;

import java.util.ArrayList;
import java.util.Arrays;
import driver.JShell;
import fileSystemObjects.*;

public class Grep extends Commands<String> {
	private String[] dirArray;
	private String search;
	private boolean subdir = false;

	public Grep(String[] dir) {
		this.dirArray = Arrays.copyOfRange(dir, 1, dir.length);
		this.search = dir[0];
	}

	public Grep(String[] dir, boolean is_subdir) {
		this.dirArray = Arrays.copyOfRange(dir, 1, dir.length);
		this.search = dir[0];
		this.subdir = is_subdir;
	}

	public String execute() {
		String output = null;
		FSElement file;
		ArrayList<File> rec_files;
		for (String fileName : dirArray) {
			file = Traverse.accessFS(fileName, JShell.root);
			if (file != null) {
				if (output == null) {
					output = "";
				}
				if (file instanceof File) {
					output += getContent((File) file);
				}
				else {
					rec_files = Traverse.getAllDirs((Directory) file);
					for (File temp: rec_files) {
						output += getContent(temp);
					}
				}
				output += "\n";
			}
		}
		output = output.substring(0, output.length() - 2);
		return output;
	}

	private String getContent(File file) {
		String output = "";
		String[] content;
		output += file.getParent().getName() + ": \n";
		content = ((File) file).getContent().split("\\r?\\n");
		for (String line : content) {
			if (line.contains(this.search)) {
				output += line + "\n";
			}
		}
		return output;
	}
}
