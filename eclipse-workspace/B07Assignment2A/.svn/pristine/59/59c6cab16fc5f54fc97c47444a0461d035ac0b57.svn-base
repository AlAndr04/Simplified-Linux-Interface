package input;
import dirCommands.Commands;
import java.util.ArrayList;
public class ExecuteHistory extends Commands<Void>{
  private int numcommand;
  private Location loc;
  private ArrayList<String> HistoryArr;
  public ExecuteHistory(String numhistory, Location loc) {
    try {
      this.loc = loc;
      HistoryArr = this.loc.getHistoryArr();
      // Makes start the size minus newstart.
      this.numcommand = Integer.parseInt(numhistory) - 1;
      HistoryArr.remove(HistoryArr.size() - 1);
      // If newstart is not a number, throws an exception to output and
      // makes newstart bigger than history array.
    } catch (NumberFormatException e) {
      Output.mustBeIntegers();
    }
  }
  public Void execute() {
    if ((numcommand >= 0) && (numcommand < HistoryArr.size())) {
      HistoryArr.add(HistoryArr.get(numcommand));
      CommandManager command = new CommandManager(HistoryArr.get(numcommand),
          loc);
    }
    return null;
  }
}
