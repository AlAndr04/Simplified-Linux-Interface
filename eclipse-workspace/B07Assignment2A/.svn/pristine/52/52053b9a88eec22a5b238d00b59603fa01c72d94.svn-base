package test;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import dirCommands.Pwd;
import fileSystemObjects.FSElement;

public class PwdTest {
  private MockJShell mockJS;
  @Before
  public void setUp() throws Exception {
    mockJS = new MockJShell();
  }
  @Test
  public void testPwdreturnPathFromRootDirectory() {
    String pwdTestStr = Pwd.returnPathFromRoot((FSElement)mockJS.
        returnMoveDir());
    String compStr = "/Dir_1";
    assertEquals(compStr,pwdTestStr);
  }
  @Test
  public void testPwdreturnPathFromRootFile() {
    String pwdTestStr = Pwd.returnPathFromRoot((FSElement)mockJS.
        returnFileRef());
    String compStr = "/Dir_1/file_1_1";
    assertEquals(compStr,pwdTestStr);
  }
  @Test
  public void testPwd() {
    mockJS.moveCurrDirOneLevelOne();
    Pwd newPwd = new Pwd(mockJS.getMockLocation());
    String pwdTestStr = newPwd.execute();
    String compStr = "/Dir_1";
    assertEquals(compStr,pwdTestStr);
  }
  @Test
  public void testPwdRoot() {
    Pwd newPwd = new Pwd(mockJS.getMockLocation());
    String pwdTestStr = newPwd.execute();
    String compStr = "/";
    assertEquals(compStr,pwdTestStr);
  }
}
