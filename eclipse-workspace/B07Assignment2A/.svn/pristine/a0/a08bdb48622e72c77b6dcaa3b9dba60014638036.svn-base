package test;

import static org.junit.Assert.*;

import org.junit.Test;

import input.Validator;

public class ValidatorTest {
	
	@Test
	public void testValidatorMkdir() {
		String test1 = "mkdir abhi /abhi/Doc /abhi/Doc/B07";
		String test2 = "mkdir /abhi/apple ";
		String test3 = "mkdir          /Abhi/Doc/";
		String[]test = {test1, test2, test3};
		for(int i=0 ; i<3; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
	}
	@Test
	public void testValidatorCd() {
		String test1 = "cd a";
		String test2 = "cd     /b/c/f";
		String test3 = "cd /Hello/";
		String[]test = {test1, test2, test3};
		for(int i=0 ; i<3; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
	}
	@Test
	public void testValidatorLs() {
		String test1 = "ls -R /abhi/cdcbo7";
		String test2 = "ls > pop.txt";
		String test3 = "ls > /Abhi/cscbo7.txt";
		String[]test = {test1, test2, test3};
		for(int i=0 ; i<3; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
		
	}
	@Test
	public void testValidatorPwd() {
		String test1 = "pwd";
		String test2 = "pwd > /Abhi/fileName.txt";
		String[]test = {test1, test2};
		for(int i=0 ; i<2; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
		
	}@Test
	public void testValidatorMv() {
		String test1 = "mv a/b/apple.txt a/b/c";
		String test2 = "mv apple.txt a/b/b";
		String[]test = {test1, test2};
		for(int i=0 ; i<2; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
		
	}@Test
	public void testValidatorCp() {
		String test1 = "cp a/b/apple.txt a/b/c";
		String test2 = "cp apple.txt             a/b/b";
		String[]test = {test1, test2};
		for(int i=0 ; i<2; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
		
	}@Test
	public void testValidatorEchoAndcat() {
		String test1 = "cat apple.txt";
		String test2 = "cat      /Abhi/Document/apple.txt";
		String[]test = {test1, test2};
		for(int i=0 ; i<2; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
		
	}@Test
	public void testValidatorMan() {
		String test1 = "man \"echo\"";
		String[]test = {test1};
		for(int i=0 ; i<1; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
	}@Test
	public void testValidatorStack() {
		String test1 = "pushd /user/Abhi/Doc";
		String test2 = "pushd Doc";
		String test3 = "popd";
		String[]test = {test1, test2, test3};
		for(int i=0 ; i<3; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}

		
	}@Test
	public void testValidatorHistory() {
		String test1 = "history 5";
		String test2 = "!3";
		String[]test = {test1, test2};
		for(int i=0 ; i<2; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		}
		
	}@Test
	public void testValidatorGrep() {
		String test1 = "grep -R /abhi/documents/b07";
		String test2 = "grep /abhi/doc/pop";
		String[]test = {test1, test2};
		for(int i=0 ; i<2; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,false);
		}
		
	}@Test
	public void testValidatorCurl() {
		String test1 = "curl http://www.cs.cmu.edu/~spok/grimmtmp/073.txt";
		String test2 = "curl         http://www.ub.edu/gilcub/SIMPLE/simple.html";
		String[]test = {test1, test2};
		for(int i=0 ; i<2; i++){
			Validator testLink = new Validator(test[i]);
			boolean flag = testLink.isvalid();
			assertEquals(flag,true);
		
	}
	}


}
