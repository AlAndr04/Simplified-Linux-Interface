package test;

import dirCommands.*;
import input.Location;
import fileCommands.*;
import fileSystemObjects.*;
import input.UniqueNameException;
import java.util.ArrayList;
import java.util.Stack;
public class MockJShell {
  private Directory moveDir;
  private File fileRef;
  private Directory rootDir = new Directory("/");
  private Location MockLocation;
  public Directory getRootDir() {
    return rootDir;
  }
  public MockJShell() {
    try {
      ArrayList<String> MockHistory = new ArrayList<String>();
      MockHistory.add("apple.txt");
      MockHistory.add("mkdir a");
      MockHistory.add("pwd");
      MockHistory.add("history");
      MockLocation = new Location(rootDir, MockHistory, new Stack<String>());
      Directory onelevelOne = Directory.makeDir("Dir_1", rootDir);
        moveDir = onelevelOne;
        Directory.makeDir("Dir_1_1", onelevelOne);
        File oneFileLevelTwo = new File("file_1_1", onelevelOne);
        fileRef = oneFileLevelTwo;
        Directory.makeDir("Dir_1_2", onelevelOne);
      Directory twolevelOne = Directory.makeDir("Dir_2", rootDir);
      File twoFileLevelTwo = new File("file_2_1", twolevelOne);
      twoFileLevelTwo.addToContent("This is my file 2_1");
      Directory threelevelOne = Directory.makeDir("Dir_3", rootDir);
      Directory fourlevelOne = Directory.makeDir("Dir_4", rootDir);
      Directory fivelevelOne = Directory.makeDir("Dir_5", rootDir);
        Directory.makeDir("Dir_5_1", fivelevelOne);
        File fiveFileLevelTwo = new File("file_5_1", fivelevelOne);
        fiveFileLevelTwo.addToContent("This is my file 5_1");
        Directory.makeDir("Dir_5_2", fivelevelOne);
        Directory.makeDir("Dir_1_2", fivelevelOne);
      //Tree newTree = new Tree(getMockLocation());
      //System.out.println(newTree.buildTree(rootDir, 0));
    } catch (UniqueNameException e) {
      System.out.println("This shouldn't be reached.");
    }
  }
  public Location getMockLocation() {
    return MockLocation;
  }
  public void moveCurrDirOneLevelOne() {
    MockLocation.setCurrDir(moveDir);
  }
  public Directory returnMoveDir() {
    return moveDir;
  }
  public File returnFileRef() {
    return fileRef;
  }
}
